{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경작명","누른탭작명","Info","재고작명","connect","state","reducer","alert열렸니","reducer2","타이머","setTimeout","alert변경","console","log","clearTimeout","useState","alert","inputData변경","id","useParams","history","useHistory","찾은상품","shoes작명","find","x","누른탭","누른탭변경","스위치","스위치변경","className","onChange","e","target","value","src","width","title","content","price","onClick","재고변경작명","dispatch","type","장바구니데이터","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"mOAUIA,EAAKC,IAAOC,IAAV,gDAGFC,EAAKF,IAAOG,GAAV,mEAEO,SAAAC,GAAK,OAAKA,EAAMC,gBAgF7B,SAASC,EAAWF,GAKhB,OAJHG,qBAAU,WACNH,EAAMI,4CAAQ,MAGI,IAAhBJ,EAAMK,+BACE,+EACc,IAAhBL,EAAMK,+BACL,+EACe,IAAhBL,EAAMK,+BACL,oFADJ,EAMR,SAASC,EAAKN,GACV,OACI,gDAASA,EAAMO,yBAAK,MAWfC,uBANf,SAAuBC,GACnB,MAAM,CACHA,MAAOA,EAAMC,QACbC,0BAASF,EAAMG,YAGPJ,EAzGf,SAAgBR,GAEhBG,qBAAU,WACP,IAAIU,EAAMC,YAAW,WAAOC,GAAQ,KAAU,KAE9C,OADAC,QAAQC,IAAI,gBACL,WAAKC,aAAaL,MAC1B,IAEF,MAAsBM,oBAAS,GAA/B,mBAAKC,EAAL,KAAYL,EAAZ,KACA,EAAgCI,mBAAS,IAAzC,mBAAiBE,GAAjB,WACMC,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAO1B,EAAM2B,kBAAQC,MAAK,SAAAC,GAAC,OAAEA,EAAEP,IAAIA,KACvC,EAAiBH,mBAAS,GAA1B,mBAAKW,EAAL,KAASC,EAAT,KACA,EAAiBZ,oBAAS,GAA1B,mBAAKa,EAAL,KAASC,EAAT,KAII,OACE,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,UACG,cAAC,EAAD,CAAIA,UAAU,MAAd,8CAGP,uBAAOC,SAAW,SAACC,GAAKf,EAAYe,EAAEC,OAAOC,WAG3B,IAAVlB,EACE,qBAAKc,UAAU,YAAf,SACF,+GAGF,KAIF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKK,IAAI,4EAA4EC,MAAM,WAE7F,sBAAKN,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBR,EAAKe,QAC3B,4BAAIf,EAAKgB,UACT,4BAAIhB,EAAKiB,QAET,cAACrC,EAAD,CAAM,2BAAON,EAAMO,2BAEnB,wBAAQ2B,UAAU,iBAAiBU,QAAU,WACzC5C,EAAM6C,qCAAO,CAAC,EAAE,GAAG,KACnB7C,EAAM8C,SAAS,CAACC,KAAK,2BAAOC,6CAAQ,CAAC1B,GAAGI,EAAKJ,GAAI2B,KAAKvB,EAAKe,MAC3DS,KAAK,KACT1B,EAAQ2B,KAAK,UAJb,sCAOA,wBAAQjB,UAAU,iBAAiBU,QAAS,WAC3CpB,EAAQ4B,UADT,4CAOV,eAAC,IAAD,CAAKlB,UAAY,OAAOmB,QAAQ,OAAOC,iBAAiB,SAAxD,UACE,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAW,WAAKX,GAAM,GAAQF,EAAM,IAAhE,sBAEJ,cAAC,IAAIwB,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAW,WAAKX,GAAM,GAAQF,EAAM,IAAhE,2BAIR,cAAC,IAAD,CAAe2B,GAAK1B,EAAK2B,WAAW,MAAMC,QAAS,IAAnD,SACA,cAAC1D,EAAD,CAAY,iCAAS4B,EAAK,6CAAUG","file":"static/js/4.ed6bbdf9.chunk.js","sourcesContent":["// import { info } from 'console';\nimport React,{ useEffect, useState } from 'react';\nimport { useHistory , useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\n// import {재고context} from './App.js';\nimport { Nav } from 'react-bootstrap';\nimport {CSSTransition} from 'react-transition-group';\nimport{connect} from 'react-redux';\n\nlet 박스 = styled.div`\n    padding: 20px;\n`;\nlet 제목 = styled.h4`\n    font-size: 20px;\n    color: ${props => (props.색상)};\n`;\n\nfunction Detail(props){\n    // let 재고 = useContext(재고context);\nuseEffect(()=>{\n   let 타이머 = setTimeout(() => {alert변경(false) }, 2000);\n   console.log('안녕');\n   return ()=>{clearTimeout(타이머)}\n},[]);\n\nlet [alert, alert변경]= useState(true);\nlet [inputData , inputData변경] = useState('');\nlet { id } = useParams();\nlet history = useHistory();\nlet 찾은상품 = props.shoes작명.find(x=>x.id==id);\nlet [누른탭,누른탭변경]= useState(0);\nlet [스위치,스위치변경]= useState(false);\n\n\n\n    return(\n      <div className=\"container\">\n        <박스>\n           <제목 className='red'>상세페이지</제목>\n        </박스>\n\n    <input onChange= {(e)=>{inputData변경(e.target.value)}}>\n    </input>\n        {\n            alert === true\n            ?(<div className=\"my-alert2\">\n            <p>재고가 얼마 남지 않았습니다 </p>\n            </div>\n        )\n        : null\n        }\n        \n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src=\"https://github.com/heejukim-developer/shop/blob/master/src/1.jpg?raw=true\" width=\"100%\" />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\n            <p>{찾은상품.content}</p>\n            <p>{찾은상품.price}</p>\n\n            <Info 재고작명 ={props.재고작명 }></Info>\n\n            <button className=\"btn btn-danger\" onClick ={()=>{\n                props.재고변경작명([9,11,12]);\n                props.dispatch({type:'항목추가',장바구니데이터:{id:찾은상품.id, name:찾은상품.title,\n                quan:1}});\n            history.push('/cart');\n            }}>주문하기</button> \n\n            <button className=\"btn btn-danger\" onClick={()=>{\n             history.goBack();\n            }}>뒤로가기</button> \n\n          </div>\n        </div>\n\n  <Nav className = \"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n    <Nav.Item>\n        <Nav.Link eventKey=\"link-0\" onClick = {()=>{스위치변경(false); 누른탭변경(0)}}>Active</Nav.Link>\n    </Nav.Item>\n    <Nav.Item>\n        <Nav.Link eventKey=\"link-1\" onClick = {()=>{스위치변경(false); 누른탭변경(1)}}>Option 2</Nav.Link>\n    </Nav.Item>\n    </Nav>\n\n<CSSTransition in ={스위치} classNames=\"wow\" timeout={500}>\n<TabContent 누른탭작명 = {누른탭} 스위치변경작명 ={스위치변경}></TabContent>\n</CSSTransition>\n  </div> \n    )\n  }\n\nfunction TabContent(props){\n useEffect(()=>{\n     props.스위치변경작명(true);\n })\n\n    if(props.누른탭작명 === 0){\n        return <div>0번째 내용입니다</div>\n    }else if(props.누른탭작명 === 1){\n        return<div>1번째 내용입니다</div>\n    }else if(props.누른탭작명 === 2){\n        return<div>2번째 내용입니다</div>\n    }\n\n  }\n  \n  function Info(props){\n      return(\n          <p> 재고: {props.재고작명[0]}</p>\n      )\n  }\n\n \nfunction state를props화 (state){\n    return{\n       state: state.reducer,\n       alert열렸니:state.reducer2\n    }\n}\nexport default connect(state를props화)(Detail)"],"sourceRoot":""}